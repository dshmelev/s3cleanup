#!/usr/bin/env ruby
require 'bundler/setup'
require 's3cleanup'
require 'time_difference'

STDOUT.sync = true
s3          = Aws::S3::Client.new
save_hashes = parse_pinnings

if ENV['EXCLUSIVE_FOLDERS']
  exclusive_hash = ENV['EXCLUSIVE_FOLDERS'].split(',')
  save_hashes    += exclusive_hash
  exclusive_keep = ENV['EXCLUSIVE_KEEP'] || 6
end

save_hashes.uniq!
bucket   = ENV['AWS_S3_BUCKET']
keep     = ENV['KEEP'] || 2
objects  = []
last_key = nil

begin
  new      = s3.list_objects(bucket: bucket, marker: last_key).contents
  objects  += new
  last_key = new.last.key unless new.empty?
end while new.size > 0

puts 'Delete artefacts:'
objects.reject do |a|
  a.key.match(Regexp.union(save_hashes)) ||
  TimeDifference.between(a.last_modified, Time.now).in_days < keep.to_f
end.each do |obj|
  puts obj.key
  # s3.delete_object(bucket: bucket, key: obj.key)
end

if exclusive_hash
  puts 'Delete exclusive artefacts:'

  objects.select do |a|
    a.key.match(Regexp.union(exclusive_hash)) &&
    TimeDifference.between(a.last_modified, Time.now).in_weeks > exclusive_keep.to_f
  end.each do |obj|
    puts obj.key
    # s3.delete_object(bucket: bucket, key: obj.key)
  end
end
